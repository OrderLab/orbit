diff --git a/src/object.c b/src/object.c
index 4e3080f..e0906c2 100644
--- a/src/object.c
+++ b/src/object.c
@@ -307,8 +307,13 @@ void incrRefCount(robj *o) {
     if (o->refcount != OBJ_SHARED_REFCOUNT) o->refcount++;
 }
 
+extern robj *barptr;
 void decrRefCount(robj *o) {
     if (o->refcount == 1) {
+        if (o == barptr) {
+            usleep(10000);
+            fprintf(stderr, "bar obj free\n");
+        }
         switch(o->type) {
         case OBJ_STRING: freeStringObject(o); break;
         case OBJ_LIST: freeListObject(o); break;
@@ -320,6 +325,10 @@ void decrRefCount(robj *o) {
         }
         zfree(o);
     } else {
+        if (o == barptr) {
+            usleep(10000);
+            fprintf(stderr, "bar obj dec\n");
+        }
         if (o->refcount <= 0) serverPanic("decrRefCount against refcount <= 0");
         if (o->refcount != OBJ_SHARED_REFCOUNT) o->refcount--;
     }
diff --git a/src/t_string.c b/src/t_string.c
index 75375f4..1d95471 100644
--- a/src/t_string.c
+++ b/src/t_string.c
@@ -64,6 +64,7 @@ static int checkStringLength(client *c, long long size) {
 #define OBJ_SET_EX (1<<2)     /* Set if time in seconds is given */
 #define OBJ_SET_PX (1<<3)     /* Set if time in ms in given */
 
+robj *barptr;
 void setGenericCommand(client *c, int flags, robj *key, robj *val, robj *expire, int unit, robj *ok_reply, robj *abort_reply) {
     long long milliseconds = 0; /* initialized to avoid any harmness warning */
 
@@ -84,6 +85,7 @@ void setGenericCommand(client *c, int flags, robj *key, robj *val, robj *expire,
         return;
     }
     setKey(c->db,key,val);
+    barptr = val;
     server.dirty++;
     if (expire) setExpire(c,c->db,key,mstime()+milliseconds);
     notifyKeyspaceEvent(NOTIFY_STRING,"set",key,c->db->id);
